---
- name: Create monitoring data directory
  ansible.builtin.file:
    path: /srv/monitoring
    state: directory
    mode: "0755"
  tags:
    - setup

- name: Create prom data directory
  ansible.builtin.file:
    path: /srv/monitoring/prom
    state: directory
    mode: "0755"
  tags:
    - setup

- name: Create grafana data directory
  ansible.builtin.file:
    path: /srv/monitoring/grafana
    state: directory
    mode: "0755"
  tags:
    - setup

- name: Setup prometheus config
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: /srv/monitoring/prometheus.yml
    mode: "0644"
  tags:
    - setup
    - update

- name: Create and start cadvisor container
  community.docker.docker_container:
    name: cadvisor
    image: "{{ cadvisor_image }}"
    pull: true
    recreate: true
    restart_policy: unless-stopped
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    networks:
      - name: monitoring
    labels:
      org.label-schema.group: monitoring
  tags:
    - setup
    - update

- name: Create and start nodeexporter container
  community.docker.docker_container:
    name: nodeexporter
    image: "{{ nodeexporter_image }}"
    pull: true
    recreate: true
    restart_policy: unless-stopped
    command:
      - --path.procfs=/host/proc
      - --path.rootfs=/rootfs
      - --path.sysfs=/host/sys
      - --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - name: monitoring
    labels:
      org.label-schema.group: monitoring
  tags:
    - setup
    - update

- name: Create and start prometheus container
  community.docker.docker_container:
    name: prometheus
    image: "{{ prometheus_image }}"
    pull: true
    recreate: true
    restart_policy: unless-stopped
    user: root
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --storage.tsdb.retention.time=2d
      - --web.enable-lifecycle
    volumes:
      - /srv/monitoring/prometheus:/prometheus
      - /srv/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - name: monitoring
    labels:
      org.label-schema.group: monitoring
  tags:
    - setup
    - update

- name: Create and start grafana container
  community.docker.docker_container:
    name: grafana
    image: "{{ grafana_image }}"
    pull: true
    recreate: true
    restart_policy: unless-stopped
    user: root
    volumes:
      - /srv/monitoring/grafana:/var/lib/grafana
    env:
      GF_SECURITY_ADMIN_USER: torben
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_password }}"
      GF_USERS_ALLOW_SIGN_UP: "false"
    networks:
      - name: monitoring
    labels:
      org.label-schema.group: monitoring
  tags:
    - setup
    - update

- name: Update caddy config
  ansible.builtin.template:
    src: grafana.j2
    dest: /srv/caddy/sites/grafana
    mode: "0644"
  notify: Restart caddy
  tags:
    - setup
    - update
